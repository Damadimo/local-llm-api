[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "llm-api"
version = "0.1.0"
description = "Local LLM API Server with Function Calling and RAG"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["llm", "api", "rag", "function-calling", "local"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
    "llama-cpp-python>=0.2.0",
    "transformers>=4.35.0",
    "torch>=2.0.0",
    "qdrant-client>=1.8.0",
    "numpy>=1.21.0",
    "python-multipart>=0.0.6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "httpx>=0.25.0",  # For testing FastAPI
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.6.0",
    "pre-commit>=3.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
]

[project.scripts]
llm-api = "llm_api.cli.server:main"
llm-data-loader = "llm_api.cli.data_loader:main"

[project.urls]
Homepage = "https://github.com/yourusername/llm-api"
Repository = "https://github.com/yourusername/llm-api"
Issues = "https://github.com/yourusername/llm-api/issues"

[tool.hatch.build.targets.wheel]
packages = ["llm_api"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["llm_api"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "llama_cpp.*",
    "qdrant_client.*",
    "transformers.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short"
asyncio_mode = "auto" 